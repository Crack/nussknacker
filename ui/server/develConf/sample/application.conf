// Comment settings example:
commentSettings: {
  matchExpression: "(issues/[0-9]*)"
  link: "https://github.com/TouK/nussknacker/$1"
}

http {
  port: 8081
}


db {
  url: "jdbc:hsqldb:hsql://localhost/db;sql.syntax_ora=true"
  driver: "org.hsqldb.jdbc.JDBCDriver"
  user: "SA"
  password: ""
  connectionTimeout: 30000
}

deploySettings: {
  requireComment: false
}

jdbcServer {
  dbFilePath: "dbFiles/db"
  dbName: "db"
  user: "sa"
  password: ""
}
customProcesses: {
  "customProcess1": "pl.touk.custom.NonExistingCustomProcess"
}

usersFile: "./develConf/sample/users.conf"
environmentAlert:{
  content: "DEVELOPMENT ENVIRONMENT"
  cssClass: "indicator-green"
}
developmentMode: true

environment: "test"
attachmentsPath: "/tmp/attachments"

metricsSettings {
  url: "http://localhost:8082/grafana/dashboard/db/$dashboard?theme=dark&var-processName=$process&var-env=test"
  defaultDashboard: "flink-esp"
  processingTypeToDashboard: {
    "request-response": "standalone",
    "streaming": "flink-esp"
  }
}

countsSettings {
  user: ""
  password: ""
  influxUrl: "http://localhost:8083"
}

kibanaSettings {
  url: "http://localhost:8080"
}

secondaryEnvironment {
  url: "http://localhost:8081/api"
  //czy tutaj powinien byc user 'techniczny' czy ten ktory klika?
  user: "admin"
  password: "admin"
  environmentId: "localtest"
}
hostName: "terefere"
graphite: {
  hostName: "poc-esp2"
  port: 2003
  protocol: "udp"
}
standaloneEngineProcessLocation: "/tmp/standaloneProcesses"

standaloneModeEnabled=true
standaloneConfig {
  jarPath: "../../engine/standalone/engine/sample/target/scala-2.11/standaloneSample.jar"
  managementUrl: "http://localhost:8070"
}

standaloneProcessConfig {
  environment: "test"
}

categoriesConfig: {
  "Category1": "streaming",
  "Category2": "streaming",
  "StandaloneCategory1": "request-response"
}

flinkConfig {
  jobManagerTimeout: 1m
  #TODO: pobieranie takze np. z nexusa
  jarPath: "../../engine/flink/management/sample/target/scala-2.11/managementSample.jar"
  restUrl: "localhost:8081"
}

processConfig {
  timeout: 10s
  checkpointInterval: 10s

  kafka = {
    zkAddress = "poc-esp1:2181"
    kafkaAddress = "poc-esp2:9092"
  }
  asyncExecutionConfig {
    bufferSize: 50
    parallelismMultiplier: 1
  }

  signals {
    topic: "esp.dev.signals"
  }

  nodes: {
    enricher: {
      defaultValues: {
        param = "'default value'"
      },
      icon: "Filter.svg",
      docsUrl: "https://touk.github.io/nussknacker/"
    },
    test1: {
      icon: "Sink.svg"
    }
    filter: {
      docsUrl: "https://touk.github.io/nussknacker/"
    },
  }
}

akka {
  http {
    server.parsing.max-content-length = 300000000 #300MB
    server.parsing.max-uri-length = 200000

  }
}
