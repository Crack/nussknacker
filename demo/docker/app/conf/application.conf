db {
  url: "jdbc:hsqldb:file:db/db;sql.syntax_ora=true"
  driver: "org.hsqldb.jdbc.JDBCDriver"
  user: "SA"
  password: ""
  connectionTimeout: 30000
}

categoriesConfig: {
  "FraudDetection": "streaming",
  "Recommendations": "streaming",
  "Default": "streaming"
}


usersFile: "./conf/users.conf"
environment: "demo"
attachmentsPath: "/tmp/touk/esp-frontend/attachments"
testSampleSize=50

akka {
  http {
    server.parsing.max-content-length = 300000000 #300MB
  }
}

flinkConfig {
  high-availability: "zookeeper"
  recovery.mode: "zookeeper"
  high-availability.zookeeper.quorum: "zookeeper:2181"
  high-availability.zookeeper.path.root: "/flinkPath"
  high-availability.zookeeper.path.namespace: "/flinkDemo"

  parallelism: 4
  jobManagerTimeout: 1m
  processConfig: "demo"
  jarPath: "./code-assembly.jar"
}

grafanaSettings {
  url: "/grafana/"
  dashboard: "flink-esp"
  env: "demo"
}

kibanaSettings {
  url: "/kibana/"
}

#Add your model configuration here
demo {
  timeout: 10s
  checkpointInterval: 10m
  processConfigCreatorClass: "pl.touk.esp.engine.example.ExampleProcessConfigCreator"
  restartInterval: "10s"
  kafka = {
    zkAddress = "zookeeper:2181"
    kafkaAddress = "kafka:9092"
  }
  defaultValues {
    values {
    }
  }

}

